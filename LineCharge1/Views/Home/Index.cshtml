@model LineCharge1.ViewModel.HomeViewModel

@{
    ViewBag.Title = "Line Charge Application";
}

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-5">
            @*For alignment*@
        </div>

        <div class="col">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">$</span>
                </div>
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Charge Amt" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col">
            @Html.DropDownListFor(model => model.ChargeTypeID, new SelectList(Model.ChargeTypes, "ChargeTypeID", "Type"), "Charge Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ChargeTypeID, "", new { @class = "text-danger" })
        </div>

        <div class="col">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add
            </button>
        </div>
    </div>
}

<div class="card">
    <div class="card-header">
        <h3><i class="fas fa-credit-card"></i>&nbsp;Charges</h3>
    </div>

    <div class="card-body">
        @{
            if (Model.Charges.Count() == 0)
            {
                <h3>No Charges Recorded.</h3>
            }
            else
            {
                <table class="table table-bordered table-sm table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Charge.Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Charge.ChargeType.Type)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Charge.TransactionDate)
                            </th>
                        </tr>
                    </thead>
                    <tfoot class="thead-dark">
                        <tr>
                            <th colspan="3">@string.Format("${0:#,#.00}", Model.ChargeTotal)</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model.Charges)
                        {
                            <tr>
                                <td class="@item.Class">
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ChargeType.Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TransactionDate)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    </div>
</div>


<div class="card mt-4">
    <div class="card-header">
        <h3><i class="fas fa-dollar-sign"></i>&nbsp;Totals by Type</h3>
        <span class="text-color-grey">Sort by Amount descending</span>
    </div>

    <div class="card-body">
        @{
            if (Model.Charges.Count() == 0)
            {
                <h3>No Charges Recorded.</h3>
            }
            else
            {
                <table class="table table-bordered table-sm table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ChargeTtl.Type)
                            </th>
                            <th>
                                <i class="fas fa-sort-amount-down"></i>
                                @Html.DisplayNameFor(model => model.ChargeTtl.Amount)
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Totals)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
         }
    </div>
</div>